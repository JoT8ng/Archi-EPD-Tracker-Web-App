name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:

  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      # Frontend pipeline
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install
      - name: Lint frontend
        working-directory: frontend
        run: npm run lint
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Test frontend
        working-directory: frontend
        run: npm run test

      # Backend pipeline
      - name: Setup python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.4'
      - name: Create and start virtual environment
        working-directory: backend
        run: |
            python3 -m venv venv
            source venv/bin/activate
      - name: Install backend dependencies
        working-directory: backend
        run: |
            pip install -r requirements.txt
      - name: Set up backend ENV
        run: |
            echo "FLASK_APP: $FLASK_APP"
            echo "FLASK_ENV: $FLASK_ENV"
            echo "SECRET_KEY: $SECRET_KEY"
        env:
          FLASK_APP: ${{ secrets.FLASK_APP }}
          FLASK_ENV: ${{ secrets.FLASK_ENV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - name: Lint backend
        working-directory: backend
        run: |
            echo "Hello run backend lint"
      - name: Test backend
        working-directory: backend
        run: |
            echo "Hello run tests"

      # Cypress e2e tests
      - name: e2e tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          command: npm run test:e2e
          start: npm run start-both
          wait-on: http://127.0.0.1:5000

      # Deployment pipeline
      - name: Deploy Frontend
        if: ${{ github.event_name == 'push' }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_FRONTEND_SERVICE_ID }}?key=${{ secrets.RENDER_FRONTEND_API_KEY }}
      - name: Deploy Backend
        if: ${{ github.event_name == 'push' }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_BACKEND_SERVICE_ID }}?key=${{ secrets.RENDER_BACKEND_API_KEY }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

  discord_notify:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: success()
        with:
          severity: info
          details: Test Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test Failed
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: failure()
        with:
          severity: error
          details: Test Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}